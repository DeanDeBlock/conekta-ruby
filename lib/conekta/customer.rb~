module Conekta
  class Customer < Resource
    include Conekta::Operations::Get
    include Conekta::Operations::Where
    include Conekta::Operations::Create
    include Conekta::Operations::Delete
    include Conekta::Operations::Update
    include Conekta::Operations::CustomAction
    include Conekta::Operations::CreateMember
    def load_from(response=nil)
      if response
        super
      end
      customer = self
      self.cards.each do |k,v|
        if !v.respond_to? :deleted or !v.deleted
          v.class.send(:define_method, :customer, Proc.new {customer})
        end
      end
      if self.respond_to? :subscription
        self.subscription.class.send(:define_method, :customer, Proc.new {customer})
      end
    end
    def create_card(params)
      self.create_member('cards', params)
    end
  end
end
